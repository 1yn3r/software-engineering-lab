import mysql.connector
import getpass

# ------------------ K·∫æT N·ªêI MYSQL ------------------
conn = mysql.connector.connect(
        host="localhost",
        user="root",                   # user trong MySQL
        password="12345",              # m·∫≠t kh·∫©u c·ªßa user
        database="learning2",          # t√™n database
        auth_plugin="mysql_native_password",
        charset="utf8mb4",
        collation="utf8mb4_unicode_ci",
        use_unicode=True
)
cursor = conn.cursor(dictionary=True)

# ------------------ H√ÄM ƒêƒÇNG NH·∫¨P ------------------
def login():
    print("===== ƒêƒÇNG NH·∫¨P SINH VI√äN =====")
    email = input("Email: ")
    pw = getpass.getpass("M·∫≠t kh·∫©u: ")
    cursor.execute("SELECT * FROM users WHERE user_email=%s AND user_password=%s AND user_role='student'", (email, pw))
    user = cursor.fetchone()
    if user:
        print(f"‚úÖ Xin ch√†o {user['user_name']}!")
        return user
    else:
        print("‚ùå Sai th√¥ng tin ƒëƒÉng nh·∫≠p!")
        return None

# ------------------ XEM DANH S√ÅCH ƒê·ªÄ THI ------------------
def xem_de_thi():
    cursor.execute("SELECT * FROM exams")
    exams = cursor.fetchall()
    if not exams:   # x·ª≠ l√Ω None ho·∫∑c r·ªóng
        print("‚ùå Hi·ªán t·∫°i ch∆∞a c√≥ ƒë·ªÅ thi n√†o.")
        return []
    print("\nüìã DANH S√ÅCH ƒê·ªÄ THI:")
    for e in exams:
        print(f"{e['exam_id']}. {e['exam_title']} (M√¥n {e['exam_subject_id']}, Th·ªùi gian {e['exam_duration']} ph√∫t, T·ªïng ƒëi·ªÉm {e['total_marks']})")
    return exams

# ------------------ L√ÄM B√ÄI THI ------------------
def lam_bai_thi(user):
    exams = xem_de_thi()
    exam_id = int(input("üëâ Nh·∫≠p ID ƒë·ªÅ thi mu·ªën l√†m: "))
    
    # L·∫•y c√¢u h·ªèi trong ƒë·ªÅ
    cursor.execute("""
        SELECT q.question_id, q.question_text
        FROM examquestions eq
        JOIN questions q ON eq.exam_question_question_id = q.question_id
        WHERE eq.exam_question_exam_id = %s
    """, (exam_id,))
    questions = cursor.fetchall()
    if not questions:
        print("‚ùå B·∫°n ƒë√£ l√†m b√†i thi n√†y r·ªìi, kh√¥ng th·ªÉ l√†m l·∫°i.")
        return

    
    score = 0
    total = len(questions)
    
    print(f"\n===== B·∫ÆT ƒê·∫¶U L√ÄM ƒê·ªÄ THI {exam_id} =====")
    for q in questions:
        print(f"\nC√¢u {q['question_id']}: {q['question_text']}")
        cursor.execute("SELECT * FROM answers WHERE answer_question_id=%s", (q['question_id'],))
        answers = cursor.fetchall()
        for ans in answers:
            print(f"   {ans['answer_id']}. {ans['answer_text']}")
        max_retry = 3
        attempts = 0
        while attempts < max_retry:
            try:
                choice = int(input("üëâ Ch·ªçn ƒë√°p √°n: "))
                if any(ans["answer_id"] == choice for ans in answers):
                    break
                else:
                    print("‚ùå ƒê√°p √°n kh√¥ng t·ªìn t·∫°i, vui l√≤ng nh·∫≠p l·∫°i.")
            except ValueError:
                print("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá, vui l√≤ng nh·∫≠p s·ªë.")
            attempts += 1
        else:
            print("‚ö†Ô∏è B·∫°n ƒë√£ nh·∫≠p sai qu√° nhi·ªÅu l·∫ßn, b·ªè qua c√¢u h·ªèi n√†y.")
            continue



        cursor.execute("SELECT is_correct FROM answers WHERE answer_id=%s", (choice,))
        result = cursor.fetchone()
        if result and result["is_correct"]:
            score += 1

    
    # L∆∞u ƒëi·ªÉm v√†o userexams
    cursor.execute("INSERT INTO userexams (user_exam_user_id, user_exam_exam_id, user_exam_score) VALUES (%s,%s,%s)",
                   (user['user_id'], exam_id, score))
    conn.commit()
    
    print(f"\nüéâ Ho√†n th√†nh! B·∫°n ƒë√∫ng {score}/{total} c√¢u.")

# ------------------ MENU ------------------
def menu():
    user = login()
    if not user:
        return
    
    while True:
        print("\n===== MENU SINH VI√äN =====")
        print("1. Xem danh s√°ch ƒë·ªÅ thi")
        print("2. L√†m b√†i thi")
        print("0. Tho√°t")
        choice = input("‚û°Ô∏è Ch·ªçn thao t√°c: ")
        
        if choice == "1":
            xem_de_thi()
        elif choice == "2":
            lam_bai_thi(user)
        elif choice == "0":
            print("üëã T·∫°m bi·ªát!")
            break
        else:
            print("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")

# ------------------ CH·∫†Y CH∆Ø∆†NG TR√åNH ------------------
if __name__ == "__main__":
    menu()
    cursor.close()
    conn.close()
